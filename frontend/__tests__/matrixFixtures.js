module.exports = {
    sizes: [2, 3, 4, 5],
    
    // Базовые операции
    addition: {
        2: {
            A: [[1, 2], [3, 4]],
            B: [[5, 6], [7, 8]],
            result: [[6, 8], [10, 12]]
        },
        3: {
            A: [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
            B: [[9, 8, 7], [6, 5, 4], [3, 2, 1]],
            result: [[10, 10, 10], [10, 10, 10], [10, 10, 10]]
        },
        4: {
            A: [
                [1, 0, 0, 0],
                [0, 1, 0, 0],
                [0, 0, 1, 0],
                [0, 0, 0, 1]
            ],
            B: [
                [2, 0, 0, 0],
                [0, 2, 0, 0],
                [0, 0, 2, 0],
                [0, 0, 0, 2]
            ],
            result: [
                [3, 0, 0, 0],
                [0, 3, 0, 0],
                [0, 0, 3, 0],
                [0, 0, 0, 3]
            ]
        },
        5: {
            A: Array(5).fill().map(() => Array(5).fill(1)),
            B: Array(5).fill().map(() => Array(5).fill(2)),
            result: Array(5).fill().map(() => Array(5).fill(3))
        }
    },

    subtraction: {
        2: {
            A: [[5, 6], [7, 8]],
            B: [[1, 2], [3, 4]],
            result: [[4, 4], [4, 4]]
        },
        3: {
            A: [[10, 10, 10], [10, 10, 10], [10, 10, 10]],
            B: [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
            result: [[9, 8, 7], [6, 5, 4], [3, 2, 1]]
        },
        4: {
            A: [
                [5, 5, 5, 5],
                [5, 5, 5, 5],
                [5, 5, 5, 5],
                [5, 5, 5, 5]
            ],
            B: [
                [1, 1, 1, 1],
                [1, 1, 1, 1],
                [1, 1, 1, 1],
                [1, 1, 1, 1]
            ],
            result: [
                [4, 4, 4, 4],
                [4, 4, 4, 4],
                [4, 4, 4, 4],
                [4, 4, 4, 4]
            ]
        },
        5: {
            A: Array(5).fill().map(() => Array(5).fill(5)),
            B: Array(5).fill().map(() => Array(5).fill(1)),
            result: Array(5).fill().map(() => Array(5).fill(4))
        }
    },

    multiplication: {
        2: {
            A: [[1, 2], [3, 4]],
            B: [[5, 6], [7, 8]],
            result: [[19, 22], [43, 50]]
        },
        3: {
            A: [[1, 0, 0], [0, 1, 0], [0, 0, 1]],
            B: [[2, 0, 0], [0, 2, 0], [0, 0, 2]],
            result: [[2, 0, 0], [0, 2, 0], [0, 0, 2]]
        },
        4: {
            A: [
                [1, 2, 3, 4],
                [5, 6, 7, 8],
                [9, 10, 11, 12],
                [13, 14, 15, 16]
            ],
            B: [
                [16, 15, 14, 13],
                [12, 11, 10, 9],
                [8, 7, 6, 5],
                [4, 3, 2, 1]
            ],
            result: [
                [80, 70, 60, 50],
                [240, 214, 188, 162],
                [400, 358, 316, 274],
                [560, 502, 444, 386]
            ]
        },
        5: {
            A: Array(5).fill().map((_, i) => 
                Array(5).fill().map((_, j) => (i === j ? 1 : 0)))
            ,
            B: Array(5).fill().map((_, i) => 
                Array(5).fill().map((_, j) => (i === j ? 2 : 0)))
            ,
            result: Array(5).fill().map((_, i) => 
                Array(5).fill().map((_, j) => (i === j ? 2 : 0)))
        }
    },

    // Расширенные операции
    transpose: {
        2: {
            matrix: [[1, 2], [3, 4]],
            result: [[1, 3], [2, 4]]
        },
        3: {
            matrix: [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
            result: [[1, 4, 7], [2, 5, 8], [3, 6, 9]]
        },
        4: {
            matrix: [
                [1, 2, 3, 4],
                [5, 6, 7, 8],
                [9, 10, 11, 12],
                [13, 14, 15, 16]
            ],
            result: [
                [1, 5, 9, 13],
                [2, 6, 10, 14],
                [3, 7, 11, 15],
                [4, 8, 12, 16]
            ]
        },
        5: {
            matrix: Array(5).fill().map((_, i) => 
                Array(5).fill().map((_, j) => i * 5 + j + 1)),
            result: Array(5).fill().map((_, i) => 
                Array(5).fill().map((_, j) => j * 5 + i + 1))
        }
    },

    scalarMultiply: {
        2: {
            matrix: [[1, 2], [3, 4]],
            scalar: 2,
            result: [[2, 4], [6, 8]]
        },
        3: {
            matrix: [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
            scalar: -1,
            result: [[-1, -2, -3], [-4, -5, -6], [-7, -8, -9]]
        },
        4: {
            matrix: [
                [2, 0, 0, 0],
                [0, 2, 0, 0],
                [0, 0, 2, 0],
                [0, 0, 0, 2]
            ],
            scalar: 0.5,
            result: [
                [1, 0, 0, 0],
                [0, 1, 0, 0],
                [0, 0, 1, 0],
                [0, 0, 0, 1]
            ]
        },
        5: {
            matrix: Array(5).fill().map(() => Array(5).fill(3)),
            scalar: 3,
            result: Array(5).fill().map(() => Array(5).fill(9))
        }
    },

    determinant: {
        2: {
            matrix: [[3, 7], [1, -4]],
            result: -19
        },
        3: {
            matrix: [[6, 1, 1], [4, -2, 5], [2, 8, 7]],
            result: -306
        },
        4: {
            matrix: [
                [1, 0, 2, -1],
                [3, 0, 0, 5],
                [2, 1, 4, -3],
                [1, 0, 5, 0]
            ],
            result: 30
        },
        5: {
            matrix: [
                [2, 0, 0, 0, 0],
                [0, 3, 0, 0, 0],
                [0, 0, 1, 0, 0],
                [0, 0, 0, 5, 0],
                [0, 0, 0, 0, 4]
            ],
            result: 2*3*1*5*4 // 120
        }
    },

    inverse: {
        2: {
            matrix: [[4, 7], [2, 6]],
            result: [[0.6, -0.7], [-0.2, 0.4]]
        },
        3: {
            matrix: [[1, 2, 3], [0, 1, 4], [5, 6, 0]],
            result: [
                [-24, 18, 5],
                [20, -15, -4],
                [-5, 4, 1]
            ]
        },
        4: {
            matrix: [
                [1, 0, 0, 0],
                [0, 2, 0, 0],
                [0, 0, 0.5, 0],
                [0, 0, 0, 1]
            ],
            result: [
                [1, 0, 0, 0],
                [0, 0.5, 0, 0],
                [0, 0, 2, 0],
                [0, 0, 0, 1]
            ]
        }
    },

    rank: {
        2: {
            matrix: [[1, 2], [3, 4]],
            result: 2
        },
        3: {
            matrix: [[1, 2, 3], [4, 5, 6], [7, 8, 9]],
            result: 2
        },
        4: {
            matrix: [
                [1, 0, 0, 0],
                [0, 1, 0, 0],
                [0, 0, 0, 0],
                [0, 0, 0, 0]
            ],
            result: 2
        },
        5: {
            matrix: Array(5).fill().map((_, i) => 
                Array(5).fill().map((_, j) => i + j)),
            result: 2
        }
    }
};